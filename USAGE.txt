NAME
            tsheets - OO Perl interface to the TSheets RESTful API

DESCRIPTION
            Perl Library that provides a full, true OO interface to the TSheets Time Tracking system

EXPORT
            None by default.

SYNOPSYS
            use strict;     # You use strict, right?
            use tsheets;    # Use the tsheets module
        
            my $ts = tsheets->new(
                    'config' => '/path/to/config.json', 
                    'username' => 'YourUsername',
                    'password' => 'YourPassword',
                    'api_key'   => 'YourAPIKey',
                    'client_url' => 'YourClientURL',
                    'pants_on_the_ground' => 'false', 
            );

            ...

            $ts->logout();

METHODS
  Operational Methods
   logout
            Sample: $ts->logout();

            Params: None

            Purpose: Ends your TSheets API session

  User Related Methods
   addUser
            Sample: $ts->addUser({
                                            'fname'=>'Elmer',
                                            'lname'=>'Fudd',
                                            'username'=>'efudd',
                                            'passwd'=>'waskiwyWabbit',
                                            'email'=>'efudd@efudd.com'
                            });

            Params: 

                    fname:
                            Required: Yes
                            Description: First name for user.

                    lname:
                            Required: Yes
                            Description: Last name for user.

                    username:
                            Required: Yes
                            Description: Username for user.

                    passwd:
                            Required: Password for user.
                            Description: Yes

                    group_id:
                            Required: Yes
                            Description: Id of the group you want the user assigned to. 
                                                     This must be a numeric id obtained from the list_groups action 
                                                 
                                                     NOTE: list_groups action not available yet, notify support if you
                                                     require this. In the meantime, you may assign a group_id of 0 to 
                                                     ensure that you can still create users

                    email:
                            Required: No
                            Description: Email address for the user. 

                    employee_id:
                            Required: No
                            Description: Custom employee id associated with the user. This is usually used 
                                                     to store an external payroll id or something similar.

                    payrate:
                            Required: No
                            Description: Float - represents dollar amount user earns over period stored in timeframe. 

                    timeframe:
                            Required: No
                            Description: One of hour, week, or year. Used in conjunction with payrate 

                    permission:
                            Required: No
                            Description: Name of the permission you want to assign or unassign to/from a user. 
                                                     List of available permissions can be obtained by calling 'get' action 
                                                     with property 'perms'. 

                    perm_value:
                            Required: No
                            Description: Must be used in conjunction with parameter 'permission'. 1 or 0. 
                                                     1 turns on the permission, or assigns it. 
                                                     0 turns off the permission, or unassigns it. 

            Purpose: Adds a user to the TSheets system

   editUser
            Sample: $ts->editUser({'username'=>'efudd','passwd'=>'killD4Wabb1t!'});

            Params:

                    username
                            Required: Yes
                            Description: Username for user you want to edit. If blank the currently logged on user is edited.

                    fname
                            Required: No
                            Description: First name for user. 

                    lname
                            Required: No
                            Description: Last name for user.

                    new_username
                            Required: No
                            Description: New username you want to assign to the user.

                    passwd
                            Required: No
                            Description: Password for user.

                    group_id
                            Required: No
                            Description: Id of the group you want the user assigned to. 
                                                     This must be a numeric id obtained from the list_groups action
                                                     NOTE: list_groups action not available yet, notify support 
                                                     if you require this

                    email
                            Required: No
                            Description: Email address for the user

                    employee_id
                            Required: No
                            Description: Custom employee id associated with the user. 
                                                     This is usually used to store an external 
                                                     payroll id or something similar

                    payrate
                            Required: No
                            Description: Float - represents dollar amount user earns over period stored in timeframe.

                    timeframe
                            Required: No
                            Description: One of hour, week, or year. Used in conjunction with payrate

                    permission
                            Required: No
                            Description:  Name of the permission you want to assign or unassign to/from a user. 
                                                      List of available permissions can be obtained by calling 'get' action 
                                                      with property 'perms'.

                    perm_value
                            Required: No
                            Description: Must be used in conjunction with parameter 'permission'. 1 or 0. 
                                                     1 turns on the permission, or assigns it. 
                                                     0 turns off the permission, or unassigns it.

            Purpose: Edits a user in the TSheets system.

   delUser
            Sample: $ts->({'username'=>'efudd'});

            Params:

                    username:
                            Required: Yes 
                            Description: Username for user you want to delete.

            Purpose: Deletes a user in the TSheets system

   isUserLoggedIn
            Sample: $ts->isUserLoggedIn({'username'=>'efudd'});
            Params:
                    username
                            Required: No
            Purpose: Tells you if a user is logged into TSheets

   isUserClockedIn
            Sample: $ts->isUserClockedIn({'username'=>'efudd'});
            Params:
                    username
                            Required: No
                            Description: You may specify the username of the user that you 
                                                     want to check on.  If no username is supplied, 
                                                     the current user [that you're connecting to the API with]
                                                     is assumed.
            Purpose: Tells you if a user is clocked into a job

   getUserData
            Sample: $ts->getUserData({'username'=>'efudd'});
            Params:
                    username
                            Required: No
                            Description: Specifies the user to get data for.
                                                     If no user is specified the current user [that you're
                                                     connecting to the API with] is assumed.

            Purpose: Retrieves basic data for the user specified.

   getTotalHours
            Sample: $ts->getTotalHours({});
            Params:
            Purpose:

  Job Related Methods
   addJob
            Sample: $ts->addJob({});
            Params:

                    job_code_name
                            Required: Yes
                            Description: The name of the job code you'd like to add.

                    job_code_type
                            Required: Yes
                            Description: Specify 'regular' or 'pto'. Defaults to regular if this 
                                                     parameter is not specified.

                    parent_id
                            Required: No
                            Description: If 0, the new job code will be a top-level job code. 
                                                     Otherwise, specify the id of the job code you want as 
                                                     the parent. If no parent_id is specified, 0 is assumed.
                    global
                            Required: no
                            Description: Specify '1' to cause this new job code to be assigned 
                                                     to all employees (current and future).
 
                    assign_all
                            Required: No
                            Description: Specify '1' to cause this new job code to be added to 
                                                     all existing employees (new employees won't have it assigned).

                    billable
                            Required: No
                            Description: Specify '1' to cause this new job code to have the billable flag set.

                    alias
                            Required: No
                            Description: The SMS alias (short code) to be used for this job code when using text messages to clock in/out

            Purpose: Adds a job

   editJob
            Sample: $ts->editJob({});
            Params:
                    job_code_id
                            Required: Yes
                            Description: The id associated with the job code you want to change

                    job_code_name
                            Required: Yes
                            Description: The new name you want to give to the job code. 
                            Either this parameter, the new_job_code_type parameter, or both, 
                            must be specified.

                    new_job_code_type
                            Required: No
                            Description: Specify 'regular' or 'pto'. Defaults to regular 
                                                     if this parameter is not specified.

                    parent_id
                            Required: No
                            Description: If 0, the new job code will be a top-level job code. 
                                                     Otherwise, specify the id of the job code you want as 
                                                     the parent.

                    global
                            Required: No
                            Description: Specify '1' to cause this new job code to be 
                                                 assigned to all employees (current and future).

                    billable
                            Required: No
                            Description: Specify '1' to cause this new job code to have the 
                                                     billable flag set.

                    alias
                            Required: No
                            Description: The SMS alias (short code) to be used for this 
                                                     job code when using text messages to clock in/out

            Purpose: Edit/Change a job code

   delJob
            Sample: $ts->delJob({});
            Params:
                    job_code_id
                            Required: Yes
                            Description: The ID for the job code that you want to delete.

            Purpose: Deletes a job

   listJobs
            Sample: $ts->listJobs({});
            Params:
                    assigned_to
                            Required: No
                            Description: A username or user_id. Causes the returned list to only 
                                                     contain jobcodes assigned to this person. Must be an admin 
                                                     or have permissions to manage this user.

                    ids
                            Required: No
                            Description: The API will only return jobcodes with these id's. When you pass a 
                                                     value in this parameter, 'parent_ids' is ignored and all matching 
                                                     records are returned, even if they have different parent_id's. 
                                                     If empty, all jobcodes for the given parent_ids will be returned.

                    parent_ids
                            Required: No
                            Description: Comma separated string of parent_id's. Default is 0. Will only 
                                                     return jobcodes with these parent_id's.

                    active
                            Required: No
                            Description: yes, no, or both. Default is yes. When yes, only returns active jobcodes. 
                                                     When no, only returns inactive jobcodes. When both, active and inactive 
                                                     jobcodes are returned.

                    type
                            Required: No
                            Description: regular, pto, or all. Default is all. When regular, only returns regular 
                                                     jobcodes. When pto, only returns pto jobcodes. When all, all jobcodes are 
                                                     returned.

                    per_page
                            Required: No
                            Description: Integer. Default is 50. Max allowed is 1000. Used to specify how many 
                                                     results per page you want returned.

                    page
                            Required: No
                            Description: Integer. Default is 1. Used to specify which page of results you want returned.


            Purpose: Lists jobs

   assignJobCode
            Sample: $ts->assignJobCode({});
            Params:
                    job_code_id
                            Required: Yes
                            Description: The id associated with the job code you want to assign. 

                    username
                            Required: No
                            Description: The username you want to assign the job code to. 
                                                     If omitted, the currently logged in user is used.

            Purpose: Assigns a job to a user

   unassignJob
            Sample: $ts->unassignJob({});
            Params:
                    job_code_id
                            Required: Yes
                            Description: The id associated with the job code you want to assign. 

                    username
                            Required: No
                            Description: The username you want to assign the job code to. 
                                                     If omitted, the currently logged in user is used.

            Purpose: Removed a user->job assignment

  Timesheet Related Methods
   clockIn
            Sample: $ts->clockIn({});
            Params:

                    job_code_id
                            Required: Maybe
                            Description: The job-code ID that you would like to clock in with. 
                                                     This parameter is optional if the user has 0 or 1 
                                                     job-codes assigned. Otherwise it is required.

                    notes
                            Required: No
                            Description: A text note to place on the timesheet. Max 2000 characters.

                    seconds
                            Required: No
                            Description: An integer >= 0. Treat this action as though it happened 
                                                     X number of seconds in the past.

                    username
                            Required: No
                            Description: Assumes the role of the user specified before taking action. 
                                                 Requires the admin or manage_timesheets permission.
            Purpose: Clocks a user in

   clockOut
            Sample: $ts->clockOut({});
            Params:
                    notes
                            Required: No
                            Description: A text note to place on the timesheet. Max 2000 characters.

                    seconds
                            Required: No
                            Description: An integer >= 0. Treat this action as though it happened 
                                                     X number of seconds in the past.

                    username
                            Required: No
                            Description: Assumes the role of the user specified before taking action. 
                                                     Requires the admin or manage_timesheets permission.


            Purpose: Clocks a user out of the job they're logged into

   switchJobs
            Sample: $ts->switchJobs({});

            Params:

                    job_code_id
                            Required: Yes
                            Description: The job-code ID that you would like to switch to.

                    notes
                            Required: No
                            Description: A text note to place on the timesheet. Max 2000 characters.

                    seconds
                            Required: No
                            Description: An integer >= 0. Treat this action as though it happened 
                                                     X number of seconds in the past.

                    username
                            Required: No
                            Description: Assumes the role of the user specified before taking action. 
                                                 Requires the admin or manage_timesheets permission.
                
            Purpose: Close (clock-out of) the user's current timesheet, and clock them in 
                             again under a new job-code.

   addTimesheetNotes
            Sample: $ts->addTimesheetNotes({});
            Params:
                    notes
                            Required: Yes
                            Description: A text note to place on the timesheet. 
                                                     Max 2000 characters. Replaces existing 
                                                     notes.

                    username
                            Required: No
                            Description: Assumes the role of the user specified before taking action. 
                                                     Requires the admin or manage_timesheets permission.

            Purpose: Adds or replaced notes for the user's current timesheet

   appendTimesheetNotes
            Sample: $ts->appendTimesheetNotes({});
            Params:
                    notes
                            Reqired: Yes
                            Description: A text note to place on the timesheet
                                                     Max 2000 characters. Replaces existing
                                                    notes.

                    username
                            Required: No
                            Description: Assumes the role of the user specified before taking action.
                                                     Requires the admin or manage_timesheets permission.

            Purpose: Appends information to the user's current timesheet note

   addManualTime
            Sample: $ts->addManualTime({});
            Params:
                    date
                            Required: Yes
                            Description: A date in the format YYYY-MM-DD when you would 
                                                     like the time to be recorded.

                    hours
                            Required: Yes
                            Description: A decimal >= 0.0. This value is converted to 
                                                     whole seconds before being stored.

                    job_code_id
                            Required: Yes
                            Description: The job-code ID that you would like to record time against. 
                                                     If the user has 0 job-codes assigned, use job_code_id 0.

                    notes
                            Required: No
                            Description: A text note to place on the timesheet. Max 2000 characters.

                    username
                            Required: No
                            Description: Add hours for this user. Requires the admin or manage_timesheets 
                                                     permission. If blank, the currently logged in user is assumed.

            Purpose:

   logGPSLoc
            Sample: $ts->logGPSLoc({});
            Params:
                    latitude
                            Required: Yes
                            Description: An angular measurement in degrees ranging from 0 deg. at the equator 
                                                     (low latitude) to 90 deg. at the North pole or -90 deg. at the South 
                                                     pole. May include up to 6 decimal places. 

                    longitude
                            Required: Yes
                            Description: An angular measurement ranging from 0 deg. at the prime meridian to +180 
                                                     deg. eastward and -180 deg. westward. May include up to 6 decimal places.

                    accuracy
                            Required: No
                            Description: A radius (in meters). Defaults to 3000.

                    altitude
                            Required: No
                            Description:  A measurement (in meters) of vertical distance from sea-level. Defaults to zero.

                    activity
                            Required: No
                            Description: A keyword indicating what activity was requested in conjunction with this GPS point. 
                                                     Possible actions are: ci (clock-in), co (clock-out), notes (adding notes), 
                                                     switch (switch jobcode), none (no action - default).

                    seconds
                            Required: No
                            Description: An integer >= 0. Treat this action as though it happened X number of seconds in the past.

                    username
                            Required: No
                            Description:  Assumes the role of the user specified before taking action. 
                                                      Requires the admin or manage_timesheets permission.

            Purpose: Record a user's current (or past) location.

   getTimesheets
            Sample: $ts->getTimesheets({});
            Params: 
                    start_date
                            Required: Yes
                            Description: Report start date in YYYY-MM-DD format.

                    end_date
                            Required: Yes
                            Description: Report end date in YYYY-MM-DD format. 
                                                     Maximum date range is 375 days.

                    job_code_id
                            Required: No
                            Description: Returns timesheets with a matching job_code_id only.

                    users
                            Required: No
                            Description: Returns only timesheets for the specified user ID(s). 
                                                     Separate multiple IDs with a comma.

            Purpose: Get a raw list of timesheets.

   whoIsWorking
            Sample: $ts->whoIsWorking();

            Params: None

            Purpose: Returns a list of all users that are currently working

   logFailedRequest
            Sample: $ts->logFailedRequest({'data'=>'action%3Dclock_in%26job_code_id%3D123'});

            Params:

                    data
                            Required: Yes
                            Description: The API action (and accompanying parameters) that failed. 
                                                     This string must be url-encoded to ensure any special characters 
                                                     in the string are successfully passed to the API.

            Purpose: The "log_failed_request" API action is useful if you're trying to synch 
                             actions that were completed while offline, and you encounter conflicts or 
                             errors. If you cannot complete an action, you can at least log it so that 
                             it can be reviewed later by the TSheets team to determine the cause of the 
                             failure/conflict.

SEE ALSO
            The TSheets wiki: http://wiki.tsheets.com/
            The orginal TSheets API: http://wiki.tsheets.com/wiki/API

AUTHOR
            Scott Cudney <lt>tsheets-module-dev@cudneys.net<gt>

COPYRIGHT AND LICENSE
            Copyright (C) 2012 by Scott Cudney

            This library is free software; you can redistribute it and/or modify
            it under the same terms as Perl itself, either Perl version 5.14.2 or,
            at your option, any later version of Perl 5 you may have available.

